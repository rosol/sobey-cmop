package com.sobey.cmdbuild.entity;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.sobey.cmdbuild.entity.basic.BasicEntity;

/**
 * IpaddressHistory generated by hbm2java
 */
@Entity
@Table(name = "subnet_history", schema = "public")
public class SubnetHistory extends BasicEntity {

	private Date endDate;
	private String gateway;
	private Integer idc;
	private String netMask;
	private String remark;
	private String segment;
	private Subnet subnet;
	private Integer tenants;

	public SubnetHistory() {
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "\"EndDate\"", nullable = false, length = 29)
	public Date getEndDate() {
		return endDate;
	}

	@Column(name = "gateway", length = 100)
	public String getGateway() {
		return gateway;
	}

	@Column(name = "idc")
	public Integer getIdc() {
		return idc;
	}

	@Column(name = "net_mask", length = 100)
	public String getNetMask() {
		return netMask;
	}

	@Column(name = "remark", length = 200)
	public String getRemark() {
		return remark;
	}

	@Column(name = "segment", length = 100)
	public String getSegment() {
		return segment;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "\"CurrentId\"", nullable = false)
	public Subnet getSubnet() {
		return subnet;
	}

	@Column(name = "tenants")
	public Integer getTenants() {
		return tenants;
	}

	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}

	public void setGateway(String gateway) {
		this.gateway = gateway;
	}

	public void setIdc(Integer idc) {
		this.idc = idc;
	}

	public void setNetMask(String netMask) {
		this.netMask = netMask;
	}

	public void setRemark(String remark) {
		this.remark = remark;
	}

	public void setSegment(String segment) {
		this.segment = segment;
	}

	public void setSubnet(Subnet subnet) {
		this.subnet = subnet;
	}

	public void setTenants(Integer tenants) {
		this.tenants = tenants;
	}

}
