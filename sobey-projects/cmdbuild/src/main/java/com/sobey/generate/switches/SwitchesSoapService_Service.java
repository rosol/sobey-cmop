package com.sobey.generate.switches;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 2.7.8 2013-12-13T13:56:36.212+08:00 Generated source version: 2.7.8
 * 
 */
@WebServiceClient(name = "SwitchesSoapService", wsdlLocation = "file:/C:/Users/Administrator/Documents/GitHub/sobey-cmop/sobey-projects/cmdbuild/src/main/resources/wsdl/switchesSoapService.xml", targetNamespace = "http://switches.generate.sobey.com")
public class SwitchesSoapService_Service extends Service {

	public final static URL WSDL_LOCATION;

	public final static QName SERVICE = new QName("http://switches.generate.sobey.com", "SwitchesSoapService");
	public final static QName SwitchesSoapServiceImplPort = new QName("http://switches.generate.sobey.com",
			"SwitchesSoapServiceImplPort");
	static {
		URL url = null;
		try {
			url = new URL(
					"file:/C:/Users/Administrator/Documents/GitHub/sobey-cmop/sobey-projects/cmdbuild/src/main/resources/wsdl/switchesSoapService.xml");
		} catch (MalformedURLException e) {
			java.util.logging.Logger
					.getLogger(SwitchesSoapService_Service.class.getName())
					.log(java.util.logging.Level.INFO,
							"Can not initialize the default wsdl from {0}",
							"file:/C:/Users/Administrator/Documents/GitHub/sobey-cmop/sobey-projects/cmdbuild/src/main/resources/wsdl/switchesSoapService.xml");
		}
		WSDL_LOCATION = url;
	}

	public SwitchesSoapService_Service(URL wsdlLocation) {
		super(wsdlLocation, SERVICE);
	}

	public SwitchesSoapService_Service(URL wsdlLocation, QName serviceName) {
		super(wsdlLocation, serviceName);
	}

	public SwitchesSoapService_Service() {
		super(WSDL_LOCATION, SERVICE);
	}

	// This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
	// API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
	// compliant code instead.
	public SwitchesSoapService_Service(WebServiceFeature... features) {
		super(WSDL_LOCATION, SERVICE, features);
	}

	// This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
	// API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
	// compliant code instead.
	public SwitchesSoapService_Service(URL wsdlLocation, WebServiceFeature... features) {
		super(wsdlLocation, SERVICE, features);
	}

	// This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
	// API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
	// compliant code instead.
	public SwitchesSoapService_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
		super(wsdlLocation, serviceName, features);
	}

	/**
	 * 
	 * @return returns SwitchesSoapService
	 */
	@WebEndpoint(name = "SwitchesSoapServiceImplPort")
	public SwitchesSoapService getSwitchesSoapServiceImplPort() {
		return super.getPort(SwitchesSoapServiceImplPort, SwitchesSoapService.class);
	}

	/**
	 * 
	 * @param features
	 *            A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy. Supported features not in
	 *            the <code>features</code> parameter will have their default values.
	 * @return returns SwitchesSoapService
	 */
	@WebEndpoint(name = "SwitchesSoapServiceImplPort")
	public SwitchesSoapService getSwitchesSoapServiceImplPort(WebServiceFeature... features) {
		return super.getPort(SwitchesSoapServiceImplPort, SwitchesSoapService.class, features);
	}

}
